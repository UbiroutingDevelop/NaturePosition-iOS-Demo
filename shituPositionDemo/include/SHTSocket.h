//
//  SHTSocket.h
//  naturelib
//  @author: Yang Tao
//  Created by YangTao on on 15/5/8.
//  Copyright (c) 2015å¹´ UbiRouting Inc. All rights reserved.
//

#import "SHTSocketDataType.h"

@interface SHTSocket : NSObject

@property (nonatomic) struct sockaddr_in serverAddress;

/**
 * @description description connect to server. return Yes if successfully, otherwise return NO.
 */
- (BOOL) connect;


- (BOOL) connectWithResvTimeOut: (struct timeval) resvTimeoutPramaters AndWriteTimeOut:(struct timeval) sendTimeoutParameters;

/**
 * Initiate with address and port
 */
- (instancetype) initWithAddress: (NSString *)address Port:(int)port;

/**
 * Write all data into socket.
 */
- (long) writeAll:(rawdata)data WithLength: (long)length;

/**
 * Attempt to write the data which is generated by @see mallocSendDataWithBundleData() into socket. return the length of bytes being send. If there is error, return -1. Not guarantee that all data being send.
 */
- (long)tryWrite: (rawdata)data WithLength:(long)length;

/** Attempt to read data into buffer which length is numbytes the socket tries to read. Not guarantee that all data being read.
 * return the actual size being read;
 */
- (long)tryReadInto: (rawdata)buffer WithBufferLength: (long)numbytes;

/**
 * Attempt to read data and append to buffer. Not guarantee that all data being read.
 */
- (long) tryReadAndPutTo: (rawdata)buffer AtStart: (int)startPos;

/** Packed all the data in the format of [dataLength, data] and write all the data to socket. After sending the data, this method will read data from server. The data that has been read is only the data it self without the dataLength info.May block if there is no reading data.
 * @warning Return the number of bytes or -1 when error. The read will not stoped until socket is closed, or isReadFinish() is YES.
 */
- (long)sendAll: (dataonly)sendData WithLength: (long)sendLength AndReadInto: (dataonly)readBuffer WithBufferSize: (long)bufferSize ShouldBundleSendData: (BOOL)shouldBundleSendData;

/**
 * close socket
 */
- (void)closeSocket;

@end

